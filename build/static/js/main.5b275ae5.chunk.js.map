{"version":3,"sources":["services/httpService.js","services/movieService.js","components/common/pagination.jsx","components/common/listGroup.jsx","services/genreService.js","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/common/like.jsx","components/moviesTables.jsx","components/common/searchBox.jsx","components/movies.jsx","utils/paginate.js","components/common/input.jsx","components/common/form.jsx","components/movieForm.jsx","components/navbar.jsx","components/customers.jsx","components/rentals.jsx","components/notFound.jsx","services/authService.js","components/loginForm.jsx","components/logout.jsx","services/userService.js","components/registerForm.jsx","components/common/protectedRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["axios","interceptors","response","use","success","console","log","Promise","resolve","error","status","alert","reject","get","post","put","delete","setToken","token","defaults","headers","common","saveMovie","movie","a","async","http","config","apiEndpoint","updateMovie","id","getMovie","movieId","deleteMovie","Pagination","props","itemsCount","pageSize","currentPage","onPageChange","pages","Math","ceil","pagination","_","range","aria-label","className","tabIndex","aria-disabled","onClick","map","page","key","ListGroup","groups","selectedGroup","onSelect","textProperty","valueProperty","Fragment","group","type","defaultProps","getGenres","TableHeader","renderSortIcone","column","sortColumn","path","order","onSort","this","columns","label","Component","TableBody","state","renderCell","item","content","data","_id","Table","Like","getLikeClass","onLike","value","MoviesTable","to","title","liked","user","isAdmin","onDelete","movies","SearchBox","onChange","placeholder","e","currentTarget","Movies","genres","selectedGenre","searchWord","handleLike","index","indexOf","setState","handleDelete","originalMovies","filteredMovies","filter","handleSort","handlePageChange","newState","handleSelect","genre","handleSearch","query","allGenres","name","filtredMovies","toLowerCase","paginatedMovies","items","pageNumber","startIndex","slice","take","paginate","orderBy","moviesCount","length","calculatePagination","Input","rest","htmlFor","Form","errors","renderInput","handleChange","renderButton","input","validateProperty","handleSubmit","preventDefault","validate","Object","keys","doSubmit","property","schema","result","Joi","details","message","abortEarly","allowUnknown","isValid","Movieform","genreId","dailyRentalRate","numberInStock","string","required","number","min","max","history","push","populateGenres","populateMovies","match","params","mapMovie","replace","onSubmit","Navbar","Customers","Rentals","NotFound","getToken","localStorage","getItem","login","email","password","setItem","loginWithJwt","logout","removeItem","getCurrentUser","jwtDecode","LoginForm","username","authService","location","window","from","pathname","Logout","apiUrlEndpoint","RegisterForm","ProtectedRoute","component","render","App","MovieForm","exact","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5b275ae5.chunk.js","sourcesContent":["import axios from \"axios\";\n\naxios.interceptors.response.use(\n  success => {\n    console.log(success);\n    return Promise.resolve(success);\n  },\n  error => {\n    const expectedErrors =\n      error.response &&\n      error.response.status >= 400 &&\n      error.response.status < 500;\n\n    if (!expectedErrors) {\n      alert(\"an unexpected error occured\");\n      console.log(\"logging th error \", error);\n    }\n    return Promise.reject(error);\n  }\n);\n\nfunction setToken(token) {\n  axios.defaults.headers.common[\"x-auth-token\"] = token;\n}\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  setToken\n};\n","import http from \"./httpService\";\nimport config from \"../config/config.json\";\n\nexport const saveMovie = async movie => {\n  http.post(config.apiEndpoint + \"/movies\", movie);\n};\n\nexport const updateMovie = async (movie, id) => {\n  http.put(config.apiEndpoint + \"/movies/\" + id, movie);\n};\n\nexport const getMovie = async movieId => {\n  return http.get(config.apiEndpoint + \"/movies/\" + movieId);\n};\n\nexport const getMovies = async () => {\n  return await http.get(config.apiEndpoint + \"/movies\");\n};\n\nexport const deleteMovie = async movieId => {\n  console.log(\"delete \", movieId);\n  return http.delete(config.apiEndpoint + \"/movies/\" + movieId);\n};\n","import React from \"react\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nconst Pagination = props => {\n  const { itemsCount, pageSize, currentPage, onPageChange } = props;\n  let pages = Math.ceil(itemsCount / pageSize);\n  const pagination = _.range(1, pages + 1);\n  return (\n    <nav aria-label=\"...\">\n      <ul className=\"pagination\">\n        <li className={\"page-item \" + (currentPage === 1 ? \"disabled\" : \"\")}>\n          <a\n            className=\"page-link\"\n            tabIndex=\"-1\"\n            aria-disabled=\"true\"\n            onClick={() => onPageChange(currentPage - 1)}\n          >\n            Previous\n          </a>\n        </li>\n        {pagination.map(page => {\n          return (\n            <li\n              className={\"page-item \" + (page === currentPage ? \"active\" : \"\")}\n              key={page}\n            >\n              <a\n                className=\"page-link \"\n                onClick={() => props.onPageChange(page)}\n              >\n                {page}\n              </a>\n            </li>\n          );\n        })}\n\n        <li\n          className={\"page-item \" + (currentPage === pages ? \"disabled\" : \"\")}\n        >\n          <a\n            className=\"page-link\"\n            onClick={() => props.onPageChange(currentPage + 1)}\n          >\n            Next\n          </a>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired\n};\n\nexport default Pagination;\n","import React from \"react\";\n\nconst ListGroup = props => {\n  const {\n    groups,\n    selectedGroup,\n    onSelect,\n    textProperty,\n    valueProperty\n  } = props;\n\n  console.log(selectedGroup);\n  return (\n    <div className=\"list-group\">\n      <React.Fragment>\n        {groups.map(group => {\n          return (\n            <button\n              type=\"button\"\n              className={\n                \"list-group-item list-group-item-action \" +\n                (group === selectedGroup ? \"active\" : \"\")\n              }\n              key={group[valueProperty]}\n              onClick={() => onSelect(group)}\n            >\n              {group[textProperty]}\n            </button>\n          );\n        })}\n      </React.Fragment>\n    </div>\n  );\n};\n\nListGroup.defaultProps = {\n  textProperty: \"name\",\n  valueProperty: \"_id\"\n};\nexport default ListGroup;\n","import http from \"./httpService\";\nimport config from \"../config/config.json\";\n\nexport const getGenres = () => {\n  return http.get(config.apiEndpoint + \"/genres\");\n};\n","import React, { Component } from \"react\";\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <thead>\n        <tr>\n          {this.props.columns.map(column => {\n            return (\n              <th\n                className=\"clickable\"\n                key={column.key}\n                onClick={() => this.onSort(column.path)}\n              >\n                {column.label}\n                {this.renderSortIcone(column)}\n              </th>\n            );\n          })}\n        </tr>\n      </thead>\n    );\n  }\n\n  renderSortIcone = column => {\n    const { sortColumn } = this.props;\n    if (column.path !== sortColumn.path) return \"\";\n\n    if (sortColumn.order === \"asc\")\n      return <i className=\"fa fa-sort-asc ml-1\"></i>;\n    else return <i className=\"fa fa-sort-desc ml-1\"></i>;\n  };\n\n  onSort = column => {\n    const sortColumn = { ...this.props.sortColumn };\n    if (sortColumn.path === column) {\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\n    } else {\n      sortColumn.path = column;\n      sortColumn.order = \"asc\";\n    }\n    this.props.onSort(sortColumn);\n  };\n}\n\nexport default TableHeader;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\n\nclass TableBody extends Component {\n  state = {};\n  renderCell = (item, column) => {\n    if (column.content) {\n      return column.content(item);\n    } else {\n      return _.get(item, column.path);\n    }\n  };\n  render() {\n    const { data, columns } = this.props;\n    return (\n      <tbody>\n        {data.map(item => (\n          <tr key={item._id}>\n            {columns.map(column => {\n              return (\n                <td key={item._id + column.key}>\n                  {this.renderCell(item, column)}\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n\nexport default TableBody;\n","import React, { Component } from \"react\";\nimport TableHeader from \"./tableHeader\";\nimport TableBody from \"./tableBody\";\n\nclass Table extends Component {\n  state = {};\n  render() {\n    const { data, columns, sortColumn, onSort } = this.props;\n    return (\n      <table className=\"table \">\n        <TableHeader\n          columns={columns}\n          sortColumn={sortColumn}\n          onSort={onSort}\n        ></TableHeader>\n        <TableBody columns={columns} data={data}></TableBody>\n      </table>\n    );\n  }\n}\n\nexport default Table;\n","import React, { Component } from \"react\";\n\nclass Like extends Component {\n  render() {\n    return <i className={this.getLikeClass()} onClick={this.props.onLike}></i>;\n  }\n\n  getLikeClass() {\n    return \"fa fa-heart\" + (this.props.value ? \"\" : \"-o\");\n  }\n}\n\nexport default Like;\n","import React, { Component } from \"react\";\nimport Table from \"./common/table\";\nimport Like from \"./common/like\";\nimport { Link } from \"react-router-dom\";\n\nclass MoviesTable extends Component {\n  columns = [\n    {\n      path: \"title\",\n      label: \"Title\",\n      key: \"title\",\n      content: movie => <Link to={`/movies/${movie._id}`}>{movie.title} </Link>\n    },\n    { path: \"genre.name\", label: \"Genre\", key: \"genre\" },\n    { path: \"numberInStock\", label: \"Stock\", key: \"stock\" },\n    { path: \"dailyRentalRate\", label: \"Rate\", key: \"rate\" },\n    {\n      key: \"like\",\n      content: movie => {\n        return (\n          <Like\n            value={movie.liked}\n            onLike={() => this.props.onLike(movie)}\n          ></Like>\n        );\n      }\n    },\n    {\n      key: \"delete\",\n      content: movie => {\n        return (\n          this.props.user &&\n          this.props.user.isAdmin && (\n            <button\n              className=\"btn btn-danger\"\n              onClick={() => this.props.onDelete(movie._id)}\n            >\n              delete\n            </button>\n          )\n        );\n      }\n    }\n  ];\n  render() {\n    const { movies, sortColumn } = this.props;\n    return (\n      <Table\n        columns={this.columns}\n        data={movies}\n        sortColumn={sortColumn}\n        onSort={this.onSort}\n      ></Table>\n    );\n  }\n\n  onSort = sortColumn => {\n    this.props.onSort(sortColumn);\n  };\n}\n\nexport default MoviesTable;\n","import React from \"react\";\n\nconst SearchBox = props => {\n  const { value, onChange } = props;\n  return (\n    <input\n      className=\"form-control my-3\"\n      type=\"text\"\n      placeholder=\"Search...\"\n      value={value}\n      onChange={e => onChange(e.currentTarget.value)}\n    ></input>\n  );\n};\n\nexport default SearchBox;\n","import React, { Component } from \"react\";\nimport { getMovies, deleteMovie } from \"../services/movieService\";\nimport Pagination from \"./common/pagination\";\nimport { paginate } from \"../utils/paginate\";\nimport ListGroup from \"./common/listGroup\";\nimport { getGenres } from \"../services/genreService\";\nimport MoviesTable from \"./moviesTables\";\nimport { Link } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport SearchBox from \"./common/searchBox\";\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    selectedGenre: null,\n    currentPage: 1,\n    searchWord: \"\",\n    pageSize: 5,\n    sortColumn: { path: \"title\", order: \"asc\" }\n  };\n  async componentDidMount() {\n    const { data: genres } = await getGenres();\n    const { data: movies } = await getMovies();\n\n    const allGenres = { name: \"All Genres\", _id: -1 };\n    this.setState({\n      movies: movies,\n      genres: [allGenres, ...genres],\n      selectedGenre: allGenres\n    });\n  }\n\n  calculatePagination() {\n    const {\n      movies,\n      currentPage,\n      pageSize,\n      selectedGenre,\n      sortColumn,\n      searchWord\n    } = this.state;\n\n    let filtredMovies =\n      selectedGenre && selectedGenre._id !== -1\n        ? movies.filter(movie => movie.genre._id === selectedGenre._id)\n        : movies;\n\n    filtredMovies = searchWord\n      ? filtredMovies.filter(\n          movie =>\n            movie.title.toLowerCase().indexOf(searchWord.toLowerCase()) >= 0\n        )\n      : filtredMovies;\n\n    filtredMovies = _.orderBy(filtredMovies, sortColumn.path, sortColumn.order);\n    const paginatedMovies = paginate(filtredMovies, currentPage, pageSize);\n    const moviesCount = filtredMovies.length;\n    return { paginatedMovies, moviesCount };\n  }\n\n  handleLike = movie => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies: movies });\n  };\n\n  handleDelete = async id => {\n    const originalMovies = this.state.movies;\n    try {\n      await deleteMovie(id);\n      const filteredMovies = originalMovies.filter(movie => movie._id !== id);\n      this.setState({\n        movies: [...filteredMovies]\n      });\n    } catch (ex) {\n      console.log(ex);\n      this.setState({ movies: originalMovies });\n    }\n  };\n\n  handleSort = sortColumn => {\n    this.setState({\n      sortColumn: { ...sortColumn }\n    });\n  };\n\n  handlePageChange = page => {\n    const newState = { ...this.state };\n    newState.currentPage = page;\n    this.setState(newState);\n  };\n\n  handleSelect = genre => {\n    this.setState({\n      ...this.state,\n      selectedGenre: genre,\n      searchWord: \"\",\n      currentPage: 1\n    });\n  };\n\n  handleSearch = query => {\n    this.setState({\n      selectedGenre: null,\n      currentPage: 1,\n      searchWord: query\n    });\n  };\n\n  render() {\n    if (this.state.movies.length > 0) {\n      const {\n        currentPage,\n        pageSize,\n        genres,\n        selectedGenre,\n        searchWord,\n        sortColumn\n      } = this.state;\n\n      const { user } = this.props;\n\n      const { paginatedMovies, moviesCount } = this.calculatePagination();\n      return (\n        <React.Fragment>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-3\">\n                <ListGroup\n                  groups={genres}\n                  selectedGroup={selectedGenre}\n                  onSelect={this.handleSelect}\n                ></ListGroup>\n              </div>\n              <div className=\"col\">\n                {user && (\n                  <Link className=\"btn btn-primary my-1\" to={\"/movies/new\"}>\n                    New movie{\" \"}\n                  </Link>\n                )}\n                <span className=\"my-1\">\n                  Showing {moviesCount} movie(s) in the database\n                </span>\n                <SearchBox value={searchWord} onChange={this.handleSearch} />\n                <MoviesTable\n                  movies={paginatedMovies}\n                  sortColumn={sortColumn}\n                  onLike={this.handleLike}\n                  onDelete={this.handleDelete}\n                  onSort={this.handleSort}\n                  user={user}\n                ></MoviesTable>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"offset-3 col \">\n                <Pagination\n                  onPageChange={this.handlePageChange}\n                  itemsCount={moviesCount}\n                  currentPage={currentPage}\n                  pageSize={pageSize}\n                ></Pagination>\n              </div>\n            </div>\n          </div>\n        </React.Fragment>\n      );\n    } else {\n      return <span>there are no movies in the databse</span>;\n    }\n  }\n}\n\nexport default Movies;\n","import _ from \"lodash\";\n\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return _(items)\n    .slice(startIndex)\n    .take(pageSize)\n    .value();\n}\n","import React from \"react\";\nconst Input = ({ name, label, value, error, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        {...rest}\n        value={value}\n        name={name}\n        className=\"form-control\"\n        id={name}\n      />\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"./input\";\n\nclass Form extends Component {\n  state = {\n    data: {},\n    errors: {}\n  };\n  renderInput = (name, label, type = \"text\") => {\n    const { data, errors } = this.state;\n    return (\n      <Input\n        name={name}\n        value={data[name]}\n        type={type}\n        label={label}\n        error={errors[name]}\n        onChange={this.handleChange}\n      ></Input>\n    );\n  };\n\n  renderButton = label => {\n    return <button className=\"btn btn-primary\">{label}</button>;\n  };\n  handleChange = ({ currentTarget: input }) => {\n    let data = { ...this.state.data };\n    data[input.name] = input.value;\n    let errors = this.validateProperty(input);\n    this.setState({ data, errors });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const errors = this.validate();\n    this.setState({ errors });\n    if (Object.keys(errors)) {\n      this.doSubmit();\n    }\n  };\n  validateProperty = ({ name, value }) => {\n    const property = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    let errors = {};\n    const result = Joi.validate(property, schema);\n    if (result.error) {\n      errors = { [name]: result.error.details[0].message };\n    }\n    return errors;\n  };\n\n  validate = () => {\n    const errors = {};\n    let result = Joi.validate(this.state.data, this.schema, {\n      abortEarly: false,\n      allowUnknown: true\n    });\n    if (result.error) {\n      for (let item of result.error.details) {\n        errors[item.path[0]] = item.message;\n      }\n    }\n    return errors;\n  };\n\n  isValid = () => !Object.keys(this.validate()).length > 0;\n}\n\nexport default Form;\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport { saveMovie, getMovie, updateMovie } from \"../services/movieService\";\nimport { getGenres } from \"../services/genreService\";\n\nclass Movieform extends Form {\n  state = {\n    data: {\n      title: \"\",\n      genreId: \"\",\n      dailyRentalRate: \"\",\n      numberInStock: \"\"\n    },\n    movieId: \"\",\n    errors: {},\n    genres: []\n  };\n\n  schema = {\n    title: Joi.string()\n      .required()\n      .label(\"Title\"),\n    genreId: Joi.string()\n      .required()\n      .label(\"Genre\"),\n    dailyRentalRate: Joi.number()\n      .min(0)\n      .max(10)\n      .required()\n      .label(\"Rate\"),\n    numberInStock: Joi.number()\n      .min(0)\n      .required()\n      .label(\"Stock\")\n  };\n\n  async componentDidMount() {\n    await this.populateGenres();\n    await this.populateMovies();\n  }\n\n  async populateMovies() {\n    if (this.props.match.params.id === \"new\") return;\n\n    try {\n      const { data } = await getMovie(this.props.match.params.id);\n      console.log(data);\n      this.setState({\n        data: this.mapMovie(data),\n        movieId: data._id\n      });\n    } catch (ex) {\n      if (ex.response.status === \"404\") {\n        return this.props.history.replace(\"/-not-found\");\n      }\n    }\n  }\n\n  async populateGenres() {\n    const { data: genres } = await getGenres();\n    this.setState({\n      genres: genres\n    });\n  }\n\n  mapMovie(movie) {\n    return {\n      title: movie.title,\n      genreId: movie.genre._id,\n      dailyRentalRate: movie.dailyRentalRate,\n      numberInStock: movie.numberInStock\n    };\n  }\n\n  doSubmit = async () => {\n    const movie = this.state.data;\n    if (this.state.movieId) {\n      await updateMovie(movie, this.state.movieId);\n    } else {\n      await saveMovie(movie);\n    }\n    this.props.history.push(\"/movies\");\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"title\", \"Title\")}\n          <label htmlFor=\"genre\"> Genre</label>\n\n          {\n            <div className=\"form-group\">\n              <select\n                name=\"genreId\"\n                id=\"genreId\"\n                value={this.state.data.genreId}\n                onChange={this.handleChange}\n                className=\"form-control\"\n              >\n                <option value=\"\">Choose...</option>\n                {this.state.genres.map(genre => (\n                  <option key={genre._id} value={genre._id}>\n                    {genre.name}\n                  </option>\n                ))}\n              </select>\n              {this.state.errors.genre && (\n                <div className=\"alert alert-danger\">\n                  {this.state.errors.genre}\n                </div>\n              )}\n            </div>\n          }\n          {this.renderInput(\"dailyRentalRate\", \"Rate\", \"number\")}\n          {this.renderInput(\"numberInStock\", \"Stock\", \"number\")}\n          {this.renderButton(\"Save\")}\n        </form>\n      </div>\n    );\n  }\n}\nexport default Movieform;\n","import React, { Component } from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\n\nclass Navbar extends Component {\n  state = {};\n  render() {\n    const { user } = this.props;\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          Vidly\n        </Link>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/movies\">\n                Movies\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/customers\">\n                Customers\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/rentals\">\n                Rentals\n              </NavLink>\n            </li>\n            {!user && (\n              <React.Fragment>\n                <li className=\"nav-item\">\n                  <NavLink className=\"nav-link\" to=\"/login\">\n                    Login\n                  </NavLink>\n                </li>\n                <li className=\"nav-item\">\n                  <NavLink className=\"nav-link\" to=\"/register\">\n                    Register\n                  </NavLink>\n                </li>\n              </React.Fragment>\n            )}\n\n            {user && (\n              <React.Fragment>\n                <li className=\"nav-item\">\n                  <NavLink className=\"nav-link\" to=\"/profile\">\n                    {user.name}\n                  </NavLink>\n                </li>\n                <li className=\"nav-item\">\n                  <NavLink className=\"nav-link\" to=\"/logout\">\n                    Logout\n                  </NavLink>\n                </li>\n              </React.Fragment>\n            )}\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nclass Customers extends Component {\n  state = {};\n  render() {\n    return <h1>Customers</h1>;\n  }\n}\n\nexport default Customers;\n","import React, { Component } from \"react\";\nclass Rentals extends Component {\n  state = {};\n  render() {\n    return <h1>Rentals</h1>;\n  }\n}\n\nexport default Rentals;\n","import React, { Component } from \"react\";\n\nclass NotFound extends Component {\n  state = {};\n  render() {\n    return <h1>Not Found</h1>;\n  }\n}\n\nexport default NotFound;\n","import http from \"./httpService\";\nimport config from \"../config/config.json\";\nimport jwtDecode from \"jwt-decode\";\n\nconst apiEndpoint = config.apiEndpoint + \"/auth\";\n\nhttp.setToken(getToken());\n\nexport async function login(email, password) {\n  const { data: token } = await http.post(apiEndpoint, {\n    email: email,\n    password: password\n  });\n  localStorage.setItem(\"token\", token);\n}\n\nexport function loginWithJwt(token) {\n  localStorage.setItem(\"token\", token);\n}\n\nexport function logout() {\n  localStorage.removeItem(\"token\");\n}\n\nexport function getCurrentUser() {\n  try {\n    const token = localStorage.getItem(\"token\");\n    return jwtDecode(token);\n  } catch {\n    return null;\n  }\n}\n\nexport function getToken() {\n  return localStorage.getItem(\"token\");\n}\n\nexport default {\n  login,\n  loginWithJwt,\n  logout,\n  getCurrentUser,\n  getToken\n};\n","import React from \"react\";\nimport Form from \"./common/form\";\nimport Joi from \"joi-browser\";\nimport authService from \"../services/authService\";\nimport { Redirect } from \"react-router-dom\";\n\nclass LoginForm extends Form {\n  state = {\n    data: {\n      username: \"\",\n      password: \"\"\n    },\n    errors: {}\n  };\n\n  schema = {\n    username: Joi.string()\n      .email()\n      .required()\n      .label(\"Username\"),\n    password: Joi.string()\n      .required()\n      .min(5)\n      .label(\"Password\")\n  };\n\n  doSubmit = async () => {\n    const { username, password } = this.state.data;\n\n    try {\n      await authService.login(username, password);\n      const { state } = this.props.location;\n      window.location = state ? state.from.pathname : \"/\";\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        const errors = { username: ex.response.data };\n        this.setState({ errors });\n      }\n    }\n  };\n\n  render() {\n    if (authService.getCurrentUser()) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"username\", \"Username\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderButton(\"Submit\")};\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import React, { Component } from \"react\";\nimport authService from \"../services/authService\";\n\nclass Logout extends Component {\n  componentDidMount() {\n    authService.logout();\n    window.location = \"/\";\n  }\n  render() {\n    return null;\n  }\n}\n\nexport default Logout;\n","import http from \"./httpService\";\nimport config from \"../config/config.json\";\n\nconst apiUrlEndpoint = config.apiEndpoint + \"/users\";\nexport function register(user) {\n  return http.post(apiUrlEndpoint, {\n    email: user.username,\n    password: user.password,\n    name: user.name\n  });\n}\n","import React from \"react\";\nimport Form from \"./common/form\";\nimport Joi from \"joi-browser\";\nimport * as userService from \"../services/userService\";\nimport authService from \"../services/authService\";\n\nclass RegisterForm extends Form {\n  state = {\n    data: {\n      username: \"\",\n      password: \"\",\n      name: \"\"\n    },\n    errors: {}\n  };\n  schema = {\n    username: Joi.string()\n      .required()\n      .email()\n      .label(\"Username\"),\n    password: Joi.string()\n      .required()\n      .min(5)\n      .label(\"Password\"),\n    name: Joi.string()\n      .required()\n      .label(\"Name\")\n  };\n  doSubmit = async () => {\n    console.log(\"submitted\");\n    try {\n      const response = await userService.register(this.state.data);\n      authService.loginWithJwt(response.headers[\"x-auth-token\"]);\n      window.location = \"/\";\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        const errors = { username: ex.response.data };\n        this.setState({ errors });\n      }\n    }\n  };\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"username\", \"Username\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderInput(\"name\", \"Name\")}\n          {this.renderButton(\"Submit\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RegisterForm;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport authService from \"../../services/authService\";\n\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\n  const user = authService.getCurrentUser();\n  return (\n    <Route\n      path={path}\n      {...rest}\n      render={props => {\n        if (!user)\n          return (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: {\n                  from: props.location\n                }\n              }}\n            ></Redirect>\n          );\n        return Component ? <Component {...props}></Component> : render(props);\n      }}\n    ></Route>\n  );\n};\n\nexport default ProtectedRoute;\n","import React, { Component } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport Movies from \"./components/movies\";\nimport MovieForm from \"./components/movieForm\";\nimport Navbar from \"./components/navbar\";\nimport Customers from \"./components/customers\";\nimport Rentals from \"./components/rentals\";\nimport NotFound from \"./components/notFound\";\nimport LoginForm from \"./components/loginForm\";\nimport Logout from \"./components/logout\";\nimport RegisterForm from \"./components/registerForm\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\nimport authService from \"./services/authService\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {};\n  componentDidMount() {\n    this.setState({ user: authService.getCurrentUser() });\n  }\n  render = () => {\n    const { user } = this.state;\n    return (\n      <React.Fragment>\n        <Navbar user={user}></Navbar>\n        <main className=\"container\">\n          <Switch>\n            <Route path=\"/login\" component={LoginForm}></Route>\n            <Route path=\"/logout\" component={Logout}></Route>\n            <Route path=\"/register\" component={RegisterForm}></Route>\n            <ProtectedRoute\n              path=\"/movies/:id\"\n              component={MovieForm}\n            ></ProtectedRoute>\n            <Route\n              path=\"/movies\"\n              render={props => <Movies {...props} user={user} />}\n            ></Route>\n            <Route path=\"/customers\" component={Customers}></Route>\n            <Route path=\"/rentals\" component={Rentals}></Route>\n            <Route path=\"/not-found\" component={NotFound}></Route>\n            <Redirect from=\"/\" exact to=\"/movies\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  };\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}